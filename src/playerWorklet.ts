const worker = `var f;(function(r){r.state="state",r.buffer="buffer",r.add="add"})(f||(f={}));var h;(function(r){r.feed="feed",r.id="id",r.end="end"})(h||(h={}));var u;(function(r){r.new="new",r.stale="stale"})(u||(u={}));var c;(function(r){r.stopped="stopped",r.playing="playing"})(c||(c={}));var l=class extends AudioWorkletProcessor{constructor(e){super(e);this.bindFns(),this.sources=[],this.sourceKey={},this.playingBuffer=[],this.endBuffer=[],this.requestBuffer=[],this.port.onmessage=s=>this.handleMessage(s),this.handlers={[f.state]:this.handleState,[f.buffer]:this.handleBuffer,[f.add]:this.handleAdd}}bindFns(){this.handleMessage=this.handleMessage.bind(this),this.handleState=this.handleState.bind(this),this.handleBuffer=this.handleBuffer.bind(this),this.handleAdd=this.handleAdd.bind(this),this.bufferKey=this.bufferKey.bind(this),this.process=this.process.bind(this),this.onEndProcess=this.onEndProcess.bind(this),this.isPlaying=this.isPlaying.bind(this)}newStreamItem(e){return{id:e,bufferCursor:0,currentBuffer:0,state:c.stopped,requested:0,totalBuffers:0,bufferState:u.new}}handleMessage(e){this.handlers[e.data.type](e.data)}handleAdd(e){e.type===f.add&&typeof e.id=="string"&&this.sourceKey[e.id]===void 0&&(this.sourceKey[e.id]=e.index,this.sources[e.index]=this.newStreamItem(e.id))}handleState(e){if(e.type!==f.state||typeof e.state!="string"||typeof e.id!="string")return;let s=this.sourceKey[e.id];s!==void 0&&(this.sources[s].state=e.state,this.sources[s].requested=0)}handleBuffer(e){if(e.type!==f.buffer||e.buffer?.buffer===void 0||typeof e.id!="string"||typeof e.bufferID!="string")return;let s=this.sourceKey[e.id];s===void 0&&(s=this.sources.length,this.sourceKey[e.id]=s,this.sources.push(this.newStreamItem(e.id)));let i=this.bufferKey(s);this.sources[s][i]={buffer:e.buffer,id:e.bufferID},this.sources[s].requested=0}bufferKey(e){let s=this.sources[e].totalBuffers;return this.sources[e].totalBuffers+=1,s}isPlaying(e){return this.sources[e].state===c.playing}onEndProcess(){this.playingBuffer.length>0&&this.port.postMessage(this.emitBufferIDs(this.playingBuffer)),this.endBuffer.length>0&&this.port.postMessage(this.emitEndIDs(this.endBuffer)),this.requestBuffer.length=0;let e=Date.now();for(let s=0;s<this.sources.length;s+=1){!this.isPlaying(s)&&this.sources[s].totalBuffers>0&&(this.sources[s]=this.newStreamItem(this.sources[s].id));let i=this.sources[s].totalBuffers-this.sources[s].currentBuffer,t=e-this.sources[s].requested,n=!!this.sources[s].requested;this.isPlaying(s)&&!n&&i<4?(this.sources[s].requested=e,this.requestBuffer.push(this.sources[s].id)):n&&t>1e3&&(this.sources[s].requested=0)}this.requestBuffer.length>0&&this.port.postMessage(this.emitFeedRequest(this.requestBuffer))}emitBufferIDs(e){return{idList:e,type:h.id}}emitFeedRequest(e){return{streams:e,type:h.feed}}emitEndIDs(e){return{idList:e,type:h.end}}process(e,s){try{this.playingBuffer.length=0,this.endBuffer.length=0;for(let i=0;i<this.sources.length;i+=1){let t=this.sources[i];if(!t||!this.isPlaying(i))continue;let n=s[i];if(!n)continue;let o=n[0];if(!this.isPlaying(i)||!t.totalBuffers||!t[t.currentBuffer]){o.fill(0);continue}for(let d=0;d<o.length;d+=1){if(!this.isPlaying(i)||!t.totalBuffers||!t[t.currentBuffer]){o.fill(0,d);break}t.bufferState===u.new&&(this.playingBuffer.push({bufferID:t[t.currentBuffer].id,sourceID:t.id}),t.bufferState=u.stale),o[d]=t[t.currentBuffer].buffer[t.bufferCursor],t.bufferCursor+=1,t.bufferCursor===t[t.currentBuffer].buffer.length&&(delete t[t.currentBuffer],t.bufferCursor=0,t.currentBuffer+=1,t.bufferState=u.new,t[t.currentBuffer]||this.endBuffer.push(t.id))}}this.onEndProcess()}catch(i){console.warn("Audio Worklet Errored:",i)}return!0}};registerProcessor("playerWorklet",l);export{l as PlayerWorklet};`

export default worker